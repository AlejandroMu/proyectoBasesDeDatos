CREATE OR REPLACE PACKAGE pkTipoProducto IS

PROCEDURE pInsertar(vIdTipoProd in VARCHAR, vNombreTipoProd in VARCHAR, vDescripcion IN VARCHAR);
PROCEDURE pEliminar(vIdTipoProducto IN VARCHAR);
PROCEDURE pModificar(vIdTipoProd in VARCHAR, vNombreTipoProd in VARCHAR, vDescripcion IN VARCHAR);
FUNCTION pConsultar(vIdTipoProd in VARCHAR) RETURN TIPOPRODUCTO%rowtype;


END pkTipoProducto;

/
CREATE OR REPLACE PROCEDURE pInsertar
(vIdTipoProd in VARCHAR, vNombreTipoProd in VARCHAR, vDescripcion IN VARCHAR)IS
BEGIN
    INSERT INTO TIPOPRODUCTO VALUES(vIdTipoProd,vNombreTipoProd,vDescripcion);

    EXCEPTION 
    WHEN DUP_VAL_ON_INDEX THEN
    RAISE_APPLICATION_ERROR(-20001,'El id esta duplicado');
    WHEN OTHERS THEN
    RAISE_APPLICATION_ERROR(-20001,'Error'||SQLERRM||SQLCODE);
END pInsertar;

/
CREATE OR REPLACE PROCEDURE pEliminar
(vIdTipoProducto IN VARCHAR) IS
BEGIN
DELETE FROM TIPOPRODUCTO TP
WHERE TP.ID=vIdTipoProducto;

EXCEPTION
WHEN NO_DATA_FOUND THEN
RAISE_APPLICATION_ERROR(-20001,'El ID que se quiere eliminar no existe');
WHEN OTHERS THEN
RAISE_APPLICATION_ERROR(-20001,'Error'||SQLERRM||SQLCODE);
END pEliminar;

/
CREATE OR REPLACE PROCEDURE pModificar
(vIdTipoProd in VARCHAR, vNombreTipoProd in VARCHAR, vDescripcion IN VARCHAR) IS
BEGIN
UPDATE TIPOPRODUCTO TP
SET
TP.ID=vIdTipoProd,
TP.NOMBRE=vNombreTipoProd,
TP.DESCRIPCION=vDescripcion
WHERE TP.ID=vIdTipoProd;

EXCEPTION
WHEN NO_DATA_FOUND THEN
RAISE_APPLICATION_ERROR(-20001,'El ID que se quiere modificar no existe');
WHEN OTHERS THEN
RAISE_APPLICATION_ERROR(-20001,'Error'||SQLERRM||SQLCODE);
END pModificar;

/
CREATE OR REPLACE FUNCTION  fConsultar
(vIdTipoProducto in VARCHAR)
RETURN TIPOPRODUCTO%rowtype IS 
rowTP TIPOPRODUCTO%rowtype;
BEGIN 
SELECT*INTO rowTP
FROM TIPOPRODUCTO TP
WHERE TP.ID=vIdTipoProducto;

EXCEPTION
WHEN NO_DATA_FOUND THEN
RAISE_APPLICATION_ERROR(-20001,'El ID que se quiere consultar no existe');
WHEN OTHERS THEN
RAISE_APPLICATION_ERROR(-20001,'Error'||SQLERRM||SQLCODE);
END fConsultar;

