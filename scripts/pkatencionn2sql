create or replace PACKAGE pkatencionnivel2 AS
    PROCEDURE patendersolicitud (
        cedfun       funcionario.cedula%TYPE,
        codsoli      solicitud.n_solicitud%TYPE,
        comentario   solicitud.comentariofuncionario%TYPE,
        estado      solicitud.estado_codigo%type
    );

    PROCEDURE psolicitudnuevoproducto (
        codsoli      solicitud.n_solicitud%TYPE,
        comentario   solicitud.comentariofuncionario%TYPE,
         estado solicitud.estado_codigo%type

    );

    PROCEDURE psolicitudretiro (
        codsoli      solicitud.n_solicitud%TYPE,
        comentario   solicitud.comentariofuncionario%TYPE,
        estado solicitud.estado_codigo%type

    );

    PROCEDURE psolicituddanoreclamo (
        codsoli      solicitud.n_solicitud%TYPE,
        comentario   solicitud.comentariofuncionario%TYPE,
        estado    solicitud.estado_codigo%TYPE
    );
END pkatencionnivel2;
/
CREATE OR REPLACE PACKAGE BODY pkatencionnivel2 AS

    PROCEDURE patendersolicitud (
        cedfun       funcionario.cedula%TYPE,
        codsoli      solicitud.n_solicitud%TYPE,
        comentario   solicitud.comentariofuncionario%TYPE,
        estado       solicitud.estado_codigo%TYPE
    ) IS
        soli    solicitud%rowtype;
        tsoli   tiposolicitud%rowtype;
        tip     solicitud.tiposolicitud_id%TYPE;
    BEGIN
        soli := pk_solicitud_n1.fconsultar(codsoli);
        IF soli.funcionario_cedula = cedfun THEN
            tip := soli.tiposolicitud_id;
            tsoli := pktiposolicitudn1.fconsultar(tip);
            CASE tsoli.nombre
                WHEN 'retiro' THEN
                    psolicitudretiro(codsoli,comentario,estado);
                WHEN 'nuevoproducto' THEN
                    psolicitudnuevoproducto(codsoli,comentario,estado);
                WHEN 'danos' THEN
                    psolicituddanoreclamo(codsoli,comentario,estado);
                WHEN 'reclamos' THEN
                    psolicituddanoreclamo(codsoli,comentario,estado);
            END CASE;

        ELSE
            raise_application_error(-20201,' does not exist');
        END IF;

    END patendersolicitud;

    PROCEDURE psolicitudnuevoproducto (
        codsoli      solicitud.n_solicitud%TYPE,
        comentario   solicitud.comentariofuncionario%TYPE,
        estado       solicitud.estado_codigo%TYPE
    ) IS
        solici   solicitud%rowtype;
        fecha    DATE;
    BEGIN
        solici := pk_solicitud_n1.fconsultar(codsoli);
        fecha := add_months(SYSDATE,1);
        pkclienteproducton1.pinsertar(solici.cliente_cedula,solici.producto_id,fecha,NULL);
        pk_solicitud_n1.pmodificarsolicitudestado(solici.n_solicitud,estado);
        pk_solicitud_n1.pmsolicitudatencion(solici.n_solicitud,SYSDATE);
        pk_solicitud_n1.pmsolicitudcomentario(solici.n_solicitud,comentario);
    EXCEPTION
        WHEN OTHERS THEN
            ROLLBACK;
    END psolicitudnuevoproducto;

    PROCEDURE psolicitudretiro (
        codsoli      solicitud.n_solicitud%TYPE,
        comentario   solicitud.comentariofuncionario%TYPE,
        estado       solicitud.estado_codigo%TYPE
    ) IS
        clientepro   clientexproducto%rowtype;
        solici       solicitud%rowtype;
        fecha        DATE;
    BEGIN
        fecha := SYSDATE;
        solici := pk_solicitud_n1.fconsultar(codsoli);
        clientepro := pkclienteproducton1.fconsultar(solici.cliente_cedula,solici.producto_id);
        pkclienteproducton1.pmodificarfechafin(solici.cliente_cedula,solici.producto_id,fecha);
        pk_solicitud_n1.pmsolicitudcomentario(solici.n_solicitud,comentario);
        pk_solicitud_n1.pmodificarsolicitudestado(solici.n_solicitud,estado);
        pk_solicitud_n1.pmsolicitudatencion(solici.n_solicitud,SYSDATE);
    EXCEPTION
        WHEN OTHERS THEN
            ROLLBACK;
    END psolicitudretiro;

    PROCEDURE psolicituddanoreclamo (
        codsoli      solicitud.n_solicitud%TYPE,
        comentario   solicitud.comentariofuncionario%TYPE,
        estado       solicitud.estado_codigo%TYPE
    ) IS
        solici   solicitud%rowtype;
    BEGIN
        solici := pk_solicitud_n1.fconsultar(codsoli);
        pk_solicitud_n1.pmsolicitudcomentario(solici.n_solicitud,comentario);
        pk_solicitud_n1.pmodificarsolicitudestado(solici.n_solicitud,estado);
        pk_solicitud_n1.pmsolicitudatencion(solici.n_solicitud,SYSDATE);
    END psolicituddanoreclamo;

END pkatencionnivel2;